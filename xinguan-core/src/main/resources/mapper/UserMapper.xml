<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qkm.xinguan.domain.infrastructure.mapper.UserMapper">
    <update id="updateUserStatusById">
        update tb_user
        set forbidden = #{status}
        where id = #{id}
    </update>
    <update id="resetPassword">
        update tb_user
        set password = #{pwd}
        where id = #{id}
    </update>
    <select id="getByUsername" resultType="com.qkm.xinguan.domain.entity.User">
        select * from tb_user  where username = #{value}
    </select>
    <select id="getUserAvatarByUsername" resultType="java.lang.String">
        select avatar
        from tb_user
        where username = #{username}
          and forbidden = 1
    </select>
    <select id="getAuthListByUsername" resultType="java.lang.String">
        select tm.perms
        from tb_user u
                 inner join tb_user_role tur
                 inner join tb_role tr
                 inner join tb_role_menu trm
                 inner join tb_menu tm
                            on u.id = tur.user_id
                                and tur.role_id = tr.id
                                and tr.id = trm.role_id
                                and trm.menu_id = tm.id
                                and u.username = #{username}
                                and tm.perms is not null
                                and tm.perms != ''
                                and tm.available = 1
        <if test="!isAdmin">
            and tr.forbidden = 1
        </if>
    </select>
    <select id="getUsername" resultType="java.lang.String">
        SELECT username FROM tb_user WHERE id = #{id}
    </select>
    <select id="getIdByUsername" resultType="java.lang.Long">
        SELECT id FROM tb_user WHERE username = #{username}
    </select>
    <select id="getMenusByUsername" resultType="com.qkm.xinguan.domain.entity.Menu">
        select *
        from tb_menu
        where id in (
            select distinct menu_id
            from tb_role_menu
            where menu_type = #{type}
              and role_id in
                  (select tur.role_id
                   from tb_user_role tur left join tb_role tr on tr.id = tur.role_id
                   where tr.forbidden = 1 and user_id = (select id from tb_user where username = #{username}))
            group by menu_id
        )
    </select>
</mapper>
